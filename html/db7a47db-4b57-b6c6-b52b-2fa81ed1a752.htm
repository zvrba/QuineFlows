<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Quine.Schemas.Core.Eventing Namespace</title><meta name="Title" content="Quine.Schemas.Core.Eventing" /><meta name="Help.Id" content="N:Quine.Schemas.Core.Eventing" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Quine.Schemas.Core.Eventing" /><meta name="guid" content="db7a47db-4b57-b6c6-b52b-2fa81ed1a752" /><meta name="Description" content="Defines types for cross-process reporting of exceptions and other events." /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Quine libraries user's guide</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Quine.<wbr />Schemas.<wbr />Core.<wbr />Eventing Namespace</h1><div class="summary">Defines types for cross-process reporting of exceptions and other events.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Classes</h2><div id="IDBCASection"><table id="classList" class="table is-hoverable"><tr><td><a href="8bd78db5-1d1f-9fe8-3755-66cee7b5e83f.htm">EventSeverity</a></td><td>
            Suggested predefined constants for using <a href="814a6430-06ce-5389-ff34-4f0572d2d017.htm">EventId</a> flags.  The definition of flags makes error events
            have the lowest integer values in the negative range.  The definition leaves 6 bits for free use.
            </td></tr><tr><td><a href="2c16865e-775f-30df-2b58-5aaa975c2029.htm">ExceptionPropertyBag</a></td><td>
            Data from <a href="cbd51fe7-ea03-50b2-8d01-a2d171280fc4.htm">Exception</a> suitable for serialization.  Use <a href="d8c3c42d-61cb-4fed-a56c-8e157d53a868.htm">Create(Exception)</a> method
            to create an instance.  If the exception implements <a href="04bb724b-4c1a-4395-c3f1-95c300ff66c0.htm">IExceptionPropertyBagProvider</a>, the interface
            is used to create a (derived) instance of <a href="2c16865e-775f-30df-2b58-5aaa975c2029.htm">ExceptionPropertyBag</a>.  Otherwise, the exception's
            public properties are added to <a href="c7cd15dc-7e34-b02c-7f07-23e46b87c1f4.htm">Data</a> dictionary.
            </td></tr><tr><td><a href="d3a57344-1bb5-845e-3fee-8adbea37e7fc.htm">ObjectPropertyBag</a></td><td> </td></tr><tr><td><a href="9e167838-4178-0728-60ba-15515d2eb59d.htm">OperationalEvent</a></td><td>
            A single event persisted by <a href="8506027c-7b3b-9499-5e9b-debdfa95d73e.htm">OperationalTrace</a>.  NOT thread-safe.
            </td></tr><tr><td><a href="8506027c-7b3b-9499-5e9b-debdfa95d73e.htm">OperationalTrace</a></td><td>
            Persists an event trace generated during a single "logical operation".  The trace can be serialized
            (i.e., <a href="63f296ef-8d9e-808e-25e5-d8b1b378a924.htm">Events</a> property accessed) only after the instance has been disposed, after which
            no further events can be added.  <a href="b98b5456-8092-2236-6e0d-d0562589cfbb.htm">EventsSnapshot</a> can be used to inspect history on an
            active instance.
            </td></tr><tr><td><a href="e1cff781-e9b5-4832-7c7c-eb01d28f6e7c.htm">PropertyValueBag</a></td><td>
            Serializable bag of typed properties.  "Simple" values, except enums, are strongly-typed; others are converted
            to string by invoking <span class="code">ToString</span> through reflection.  NOT thread-safe.  This is the main extensibility
            point: derive from this class to store more structured data rather than putting bits into the dictionary.
            Use <a href="ea199246-ebdf-d609-05b2-fac8f2373a69.htm">RegisterKnownType(Type)</a> to support additional serializable types in the data dictionary.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Structures</h2><div id="IDECASection"><table id="structureList" class="table is-hoverable"><tr><td><a href="814a6430-06ce-5389-ff34-4f0572d2d017.htm">EventId</a></td><td>
            Strongly-typed wrapper for integer-valued event ids.  The integer value is accessible through <a href="c89363f9-0c2c-1786-35a2-af0d198999bf.htm">Value</a> member.
            </td></tr><tr><td><a href="cf5dc45e-10cb-8109-6799-93e21460ba4f.htm">PropertyValueBag<span id="LSTD29786A1_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>UntypedValue</a></td><td>
            Represents a typed value converted to untyped string.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Interfaces</h2><div id="IDACASection"><table id="interfaceList" class="table is-hoverable"><tr><td><a href="04bb724b-4c1a-4395-c3f1-95c300ff66c0.htm">IExceptionPropertyBagProvider</a></td><td>
            Provides a factory method for creating (subclasses of) <a href="2c16865e-775f-30df-2b58-5aaa975c2029.htm">ExceptionPropertyBag</a>.  Exceptions
            implementing this interface is the preferred method of serializing structured exception data (instead
            of populating <a href="c7cd15dc-7e34-b02c-7f07-23e46b87c1f4.htm">Data</a>).
            </td></tr></table></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Classes</a></li><li><a class="quickLink">Structures</a></li><li><a class="quickLink">Interfaces</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="(c) 2024-2025 Stian Z. Vrba" target="_blank" rel="noopener noreferrer">(c) 2024-2025 Stian Z. Vrba</a></p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>