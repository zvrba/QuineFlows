<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Quine.Schemas.Graph Namespace</title><meta name="Title" content="Quine.Schemas.Graph" /><meta name="Help.Id" content="N:Quine.Schemas.Graph" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Quine.Schemas.Graph" /><meta name="guid" content="287097c4-e7e0-c04f-4842-ca569ebbe023" /><meta name="Description" content="summaryN:Quine.Schemas." /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Quine libraries user's guide</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Quine.<wbr />Schemas.<wbr />Graph Namespace</h1><div class="summary"><p class="missing">[Missing &lt;summary&gt; documentation for "N:Quine.Schemas.Graph"]</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Classes</h2><div id="IDACASection"><table id="classList" class="table is-hoverable"><tr><td><a href="bece4d31-db06-c70d-c215-b2376b8b9cdf.htm">DemultiplexorNodeState<span id="LST2B6E9D63_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TPayload<span id="LST2B6E9D63_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Demultiplexes a message, tagged with an integer, to one of the predetermined number of output ports.
            </td></tr><tr><td><a href="00ac4d3b-25d4-8347-2215-9b7c7f989c77.htm">GraphMessage</a></td><td>
            Messages flowing through the graph must derive from this class.
            </td></tr><tr><td><a href="1d3b43d5-33c1-fc34-c877-0ad37d6856d0.htm">GraphRuntimeHook</a></td><td>
            Provides a hook for connecting schema classes with their run-time behavior.
            </td></tr><tr><td><a href="2606e79c-7a0c-e505-09e3-21eb320acb44.htm">GraphState</a></td><td>
            Class for serializing the complete state of the graph, including active messages and their histories.
            </td></tr><tr><td><a href="5b59da0e-983a-b089-579e-49d5319db542.htm">InputPortState<span id="LST2B6E9D63_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST2B6E9D63_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Input port stores incoming messages.
            </td></tr><tr><td><a href="b6555bf9-8375-f439-5808-23795633af66.htm">MultiplexedMessage<span id="LST2B6E9D63_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST2B6E9D63_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Message type handled by <a href="bece4d31-db06-c70d-c215-b2376b8b9cdf.htm">DemultiplexorNodeState<span id="LST2B6E9D63_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TPayload<span id="LST2B6E9D63_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>.
            </td></tr><tr><td><a href="83ffc83d-d8cc-93cf-8ea7-74b72c9c4dc1.htm">NodeStateBase</a></td><td>
            Class for serializing the node state.  The state of any concrete node must inherit from this class.
            </td></tr><tr><td><a href="0ea0e147-5889-2f00-5871-32af260cc5ac.htm">OutputPortState<span id="LST2B6E9D63_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST2B6E9D63_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Output port is used to send outgoing messages.
            </td></tr><tr><td><a href="00284a29-30f6-aefb-1d79-c84dc1eeef35.htm">PortStateBase</a></td><td>
            Base class for input and output ports.
            </td></tr><tr><td><a href="49afb1f2-2e9d-8e40-deaa-00a440116990.htm">SourceNodeState<span id="LST2B6E9D63_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST2B6E9D63_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Source node generates messages; it has no inputs.
            </td></tr><tr><td><a href="c4e9c423-3907-cc56-300a-a306ecf1dc40.htm">TransformNodeState<span id="LST2B6E9D63_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TInput<span id="LST2B6E9D63_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            This is a "drain" node: it accepts messages without producing any output.
            </td></tr><tr><td><a href="35588f93-9a9a-d459-c627-e82b806a110b.htm">TransformNodeState<span id="LST2B6E9D63_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TInput, TOutput0<span id="LST2B6E9D63_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            This node acts as a simple function, mapping single input to single output.
            </td></tr><tr><td><a href="575bbe2e-f1f5-e8b2-ead8-bb46319a7fb2.htm">TransformNodeState<span id="LST2B6E9D63_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TInput, TOutput0, TOutput1<span id="LST2B6E9D63_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            This node maps single input type to two possible output types.
            </td></tr><tr><td><a href="6e4cfb8e-7855-6d9e-8402-5dcbc90cd3bd.htm">XmlNamespaces</a></td><td>
            Provides constants for XML namespaces.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Structures</h2><div id="IDECASection"><table id="structureList" class="table is-hoverable"><tr><td><a href="3026e5ee-b9e8-ba42-d392-e0c5f53e519a.htm">TreePathId</a></td><td>
            Uniquely identifies a graph node within a set of unrelated graph runs.
            Encodes OID-like identifiers (e.g., <span class="code">7.3.11.22.5</span>) into a compact binary format.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Interfaces</h2><div id="IDFCASection"><table id="interfaceList" class="table is-hoverable"><tr><td><a href="39847293-1e86-09b0-d2be-5ed594c28dd4.htm">IConnectionSource<span id="LST2B6E9D63_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST2B6E9D63_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Helper interface for creating connections.
            </td></tr><tr><td><a href="d071ef96-f5c7-8dd2-0239-231f9d011bbd.htm">IConnectionTarget<span id="LST2B6E9D63_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST2B6E9D63_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Helper interface for creating connections.
            </td></tr><tr><td><a href="cef45db4-50e9-36e3-2292-f55f7c90fa00.htm">ITreeIdentity</a></td><td>
            Provides a hierarchical id for jobs, messages, etc.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Enumerations</h2><div id="IDCCASection"><table id="enumerationList" class="table is-hoverable"><tr><td><a href="f0217b00-7e50-0a2b-4349-4ac8930e8f72.htm">GraphRunState</a></td><td>
            Reflects the completion state of the graph or the node.
            </td></tr><tr><td><a href="e703fead-7285-6a66-bbb6-c8603b952955.htm">MessageProcessingState</a></td><td>
            Processing outcome of a graph message.
            </td></tr></table></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Classes</a></li><li><a class="quickLink">Structures</a></li><li><a class="quickLink">Interfaces</a></li><li><a class="quickLink">Enumerations</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="(c) 2024-2025 Stian Z. Vrba" target="_blank" rel="noopener noreferrer">(c) 2024-2025 Stian Z. Vrba</a></p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>