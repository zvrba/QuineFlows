<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Quine.Schemas.Core.Repository Namespace</title><meta name="Title" content="Quine.Schemas.Core.Repository" /><meta name="Help.Id" content="N:Quine.Schemas.Core.Repository" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Quine.Schemas.Core.Repository" /><meta name="guid" content="e56dbebf-a812-e470-7fe3-789aeb3b4309" /><meta name="Description" content="Contains abstract types that assist with implementing a mini-ORM. The classes support caching and observability so that UIs can be notified of changes. Tested with SQLServer and VistaDB (nice embedded database, worth the money)." /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Quine libraries user's guide</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Quine.<wbr />Schemas.<wbr />Core.<wbr />Repository Namespace</h1><div class="summary">Contains abstract types that assist with implementing a mini-ORM. The classes support caching and observability so that UIs can be notified of changes. Tested with SQLServer and VistaDB (nice embedded database, worth the money).</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Classes</h2><div id="IDACASection"><table id="classList" class="table is-hoverable"><tr><td><a href="5fb64513-04c5-d61d-5542-3a5622ad0f9e.htm">EntityCollection<span id="LST73433C24_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TEntity<span id="LST73433C24_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Represents the result of database query.  If <span class="parameter">TEntity</span> implements <a href="7346544a-aa32-2976-eb6e-c0c294479278.htm">IIdentity<span id="LST73433C24_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST73433C24_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>,
            the collection must be used as a dictionary.  Otherwise, the collection must be used as an indexed list.  The
            implementation uses immutable list or dictionary, so it is safe for concurrent use.
            </td></tr><tr><td><a href="3dcb2ed4-6f83-2514-65f0-48fcc1af0fbe.htm">IQdbSource<span id="LST73433C24_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Providers</a></td><td> </td></tr><tr><td><a href="a346e629-a67a-1330-42e7-5c2a4bea2fc7.htm">QdbCommand</a></td><td>
            Wrapper for a <span class="code">DbCommand</span> with simplified parameter creation.  See remarks.
            </td></tr><tr><td><a href="b5672cb3-e6bf-09be-82df-17131c659010.htm">QdbEnumAttributes<span id="LST73433C24_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TEnum<span id="LST73433C24_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td> </td></tr><tr><td><a href="c257ebe3-e7df-1169-d5ed-04a03a46b065.htm">QdbEvents</a></td><td>
            Events are shared by all instances of <a href="7199f78e-b623-0740-8ad7-4cfc4f37f2a6.htm">IQdbSource</a>.
            </td></tr><tr><td><a href="cf515c96-9e6d-f825-d6cd-686facf5f63a.htm">QdbNormalStringAttributes<span id="LST73433C24_7" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TStringTraits<span id="LST73433C24_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td> </td></tr><tr><td><a href="c228a51a-2e3e-5757-e3d6-e5a1bcaee710.htm">QdbPathComponentsAttributes</a></td><td> </td></tr><tr><td><a href="50479569-7730-0933-bfdd-11d566435372.htm">QdbReader</a></td><td>
            Reads a collection of entities from a result set.
            </td></tr><tr><td><a href="79fb6c77-a799-d89f-35b4-ca951673c825.htm">QdbValueAccessor<span id="LST73433C24_9" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TEntity<span id="LST73433C24_10" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Provides weakly-typed access to an arbitrary (possibly nested) member of <span class="parameter">TEntity</span>.
            Equality is based on <a href="cd9033a9-f0bd-f4e8-a0ac-e53058d3bbde.htm">DbName</a> field since names must be unique in any
            parameter set or table.  The two instances are "equal" if they refer to the same property OR have the
            same <span class="code">DbName</span> attribute. (A collection of value accessors can contain unique instance of either.)
            </td></tr><tr><td><a href="c11b81e9-1295-8903-dfe6-fe5b83d95890.htm">QdbValueAttributes</a></td><td>
            Describes value attributes on the database side for the member and provides conversions between .NET and DB types.
            Deriving from this class allows implementation of custom conversions.  Equality is based only on <a href="cd9033a9-f0bd-f4e8-a0ac-e53058d3bbde.htm">DbName</a>
            because parameters and columns must be uniquely named in any DB invocation.
            </td></tr><tr><td><a href="1cf8ae02-039e-6543-d4fb-bf72d5577984.htm">QdbXmlAttributes<span id="LST73433C24_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TValue<span id="LST73433C24_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td> </td></tr><tr><td><a href="a00b3c30-f495-42e7-8428-859ef9373311.htm">TsqlDatabaseConnection</a></td><td>
            Base class for implementing <a href="8eb1fbfb-6d08-b84b-8a6c-bcb25b82219b.htm">IQdbConnection</a> on SQL syntax.
            Uses TSQL syntax for parameters, etc.
            </td></tr><tr><td><a href="4719d620-4aa4-1f0a-52c1-0d3b46f17543.htm">TsqlDatabaseConnection<span id="LST73433C24_13" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TsqlTransaction</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Structures</h2><div id="IDJCASection"><table id="structureList" class="table is-hoverable"><tr><td><a href="b1ef7ec7-0062-6bee-883f-e348eea45208.htm">EntityAccessor<span id="LST73433C24_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TEntity<span id="LST73433C24_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Every table, view or command parameter block must declare a readonly static instance of this class.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Interfaces</h2><div id="IDICASection"><table id="interfaceList" class="table is-hoverable"><tr><td><a href="8eb1fbfb-6d08-b84b-8a6c-bcb25b82219b.htm">IQdbConnection</a></td><td>
            Provides access to transactions and table operations.  Default method implementations are targeted towards @-style parameters
            which are supported by most DB providers.
            </td></tr><tr><td><a href="b0ae5543-1b1c-c0d3-0992-3d79312caac7.htm">IQdbEntity<span id="LST73433C24_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TEntity<span id="LST73433C24_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td> </td></tr><tr><td><a href="cdbf108a-1b44-e97e-72e6-acd3cb24a459.htm">IQdbEntityReadCommand<span id="LST73433C24_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TEntity<span id="LST73433C24_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td> </td></tr><tr><td><a href="8101f3e3-b46c-9ba4-02ee-684371b8bf8b.htm">IQdbEntityWriteCommand<span id="LST73433C24_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TEntity<span id="LST73433C24_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td> </td></tr><tr><td><a href="7199f78e-b623-0740-8ad7-4cfc4f37f2a6.htm">IQdbSource</a></td><td>
            Provides operations related to the database provider.
            </td></tr><tr><td><a href="d374c36d-8db8-dd03-2678-1ea96b81f797.htm">IQdbTransaction</a></td><td>
            Transaction handle with customizable handling of rollback errors.  Disposing a transaction without committing it
            will roll it back.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Delegates</h2><div id="IDGCASection"><table id="delegateList" class="table is-hoverable"><tr><td><a href="9ad02e5c-9478-4dff-0f85-397aa99fa468.htm">QdbChangeNotification</a></td><td>
            Delegate type used to deliver change notification events to the repository.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Enumerations</h2><div id="IDFCASection"><table id="enumerationList" class="table is-hoverable"><tr><td><a href="a71644ba-f74b-e680-6897-33045048d003.htm">IQdbSource<span id="LST73433C24_22" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SchemaVersionCheckResult</a></td><td>
            Possible return values from <a href="3ed021f3-3b2a-efaa-8cde-b04dd911a852.htm">CheckSchemaVersionAsync(Int32, Int32)</a>.
            </td></tr><tr><td><a href="057c2e30-0364-2f97-76f9-a9cca2c7ee35.htm">QdbChangeType</a></td><td>
            Describes actions that <span class="noLink">[!:IKeyedRepository&lt;K, V&gt;]</span> performs on the cached values.
            </td></tr></table></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Classes</a></li><li><a class="quickLink">Structures</a></li><li><a class="quickLink">Interfaces</a></li><li><a class="quickLink">Delegates</a></li><li><a class="quickLink">Enumerations</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="(c) 2024-2025 Stian Z. Vrba" target="_blank" rel="noopener noreferrer">(c) 2024-2025 Stian Z. Vrba</a></p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>