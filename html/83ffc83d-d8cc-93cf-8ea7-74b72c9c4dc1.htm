<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>NodeStateBase Class</title><meta name="Title" content="NodeStateBase" /><meta name="Help.Id" content="T:Quine.Schemas.Graph.NodeStateBase" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Quine.Schemas.Graph" /><meta name="guid" content="83ffc83d-d8cc-93cf-8ea7-74b72c9c4dc1" /><meta name="Description" content="Class for serializing the node state. The state of any concrete node must inherit from this class." /><meta name="tocFile" content="../toc/IDL.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Quine libraries user's guide</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Node<wbr />State<wbr />Base Class</h1><div class="summary">
            Class for serializing the node state.  The state of any concrete node must inherit from this class.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="287097c4-e7e0-c04f-4842-ca569ebbe023.htm">Quine.Schemas.Graph</a><br /><strong>Assembly:</strong> Quine.Schemas.Graph (in Quine.Schemas.Graph.dll) Version: 1.0.0+2d4678028124cbb40154ed2e4b22472910ab3869<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="identifier">DataContractAttribute</span>(Namespace = "http://schemas.quine.no/graph/v8_0.xsd")]
[<span class="identifier">KnownTypeAttribute</span>("GetKnownTypes")]
<span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">NodeStateBase</span> : <span class="identifier">GraphRuntimeHook</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_top" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="1d3b43d5-33c1-fc34-c877-0ad37d6856d0.htm">GraphRuntimeHook</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">NodeStateBase</span></dd></dl><dl class="inheritanceHierarchy"><dt>Derived</dt><dd><div><a href="49afb1f2-2e9d-8e40-deaa-00a440116990.htm">Quine.Schemas.Graph<span id="LSTF0876B66_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SourceNodeState<span id="LSTF0876B66_1" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LSTF0876B66_2" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></div><div><a href="c4e9c423-3907-cc56-300a-a306ecf1dc40.htm">Quine.Schemas.Graph<span id="LSTF0876B66_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TransformNodeState<span id="LSTF0876B66_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TInput<span id="LSTF0876B66_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></div></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDBEASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="56c4147b-2cf3-06c2-5afd-dd967985afae.htm">NodeStateBase</a></td><td>
            Constructor.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDEEASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="d75104d2-c4d6-1da3-cc29-fa7c24e149af.htm">CompletionState</a></td><td>
            The node's completion state.
            </td></tr><tr><td><a href="d86204c5-404f-21fc-4162-9d37d7664753.htm">Id</a></td><td>
            "Local" id of this instance.  This is valid only within the same graph.
            <br />(Inherited from <a href="1d3b43d5-33c1-fc34-c877-0ad37d6856d0.htm">GraphRuntimeHook</a>)</td></tr><tr><td><a href="e11e282c-8152-6f0f-099e-d298bd199bee.htm">ImplementingType</a></td><td>
            Assembly-qualified name of the implementing type.
            </td></tr><tr><td><a href="7cfe903f-1416-5149-6b89-dd7440cb954f.htm">InputPorts</a></td><td>
            Array of input ports.
            </td></tr><tr><td><a href="b356b5d0-b661-117f-f5c2-4a19fa5b291d.htm">OutputPorts</a></td><td>
            Array of output ports.
            </td></tr><tr><td><a href="b981012b-9ffa-b891-56f8-fe6a90cdbb15.htm">Owner</a></td><td>
            Parent/owner of this node, or null.
            <br />(Inherited from <a href="1d3b43d5-33c1-fc34-c877-0ad37d6856d0.htm">GraphRuntimeHook</a>)</td></tr><tr><td><a href="76a43cf5-5ad5-f4f7-9354-6276e52313b1.htm">PathId</a></td><td>
            Provides IDs of all job nodes from the root (1st element) to <span class="code">this</span>.
            The byte array is a sequence of integer ids with variable-length encoding (7-bit).
            <br />(Inherited from <a href="1d3b43d5-33c1-fc34-c877-0ad37d6856d0.htm">GraphRuntimeHook</a>)</td></tr><tr><td><a href="bf117992-3ceb-86e4-52ef-7ae014fb75d1.htm">RuntimeObject</a></td><td>
            The object implementing the actual behavior.
            <br />(Inherited from <a href="1d3b43d5-33c1-fc34-c877-0ad37d6856d0.htm">GraphRuntimeHook</a>)</td></tr><tr><td><a href="3eebe16d-d4fe-271d-8c2a-05f1ab9b55be.htm">Trace</a></td><td>
            Trace events generated during the execution of this node.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDCEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="d831388a-4566-15e0-651f-a14d74b8b47e.htm">SetId</a></td><td>
            The override ensures that ports get assigned sequential ids.
            <br />(Overrides <a href="ee532684-877a-68aa-0593-4c558a5e40fa.htm">GraphRuntimeHook<span id="LSTF0876B66_6" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SetId(ITreeIdentity, Int32)</a>)</td></tr><tr><td><a href="699b2b43-6975-9357-84e5-2472acdf6150.htm">SetPorts<span id="LSTF0876B66_7" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            This method is a deserialization hook.  Subclasses must implement this so that <a href="7cfe903f-1416-5149-6b89-dd7440cb954f.htm">InputPorts</a>
            and <a href="b356b5d0-b661-117f-f5c2-4a19fa5b291d.htm">OutputPorts</a> are set correctly also after deserialization.
            </td></tr><tr><td><a href="8b74c442-5f52-b970-585f-53a9d41ba2bf.htm">SetPorts(<span id="LSTF0876B66_8" data-languageSpecificText="cpp=array&lt;"></span>PortStateBase<span id="LSTF0876B66_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, <span id="LSTF0876B66_10" data-languageSpecificText="cpp=array&lt;"></span>PortStateBase<span id="LSTF0876B66_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Assigns values to <a href="7cfe903f-1416-5149-6b89-dd7440cb954f.htm">InputPorts</a> and <a href="b356b5d0-b661-117f-f5c2-4a19fa5b291d.htm">OutputPorts</a>.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAEASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="5c2d1a9c-ff6b-0bf8-5bf7-341616d20a60.htm">KnownTypes</a></td><td>
            Derived types must be added to this collection.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="287097c4-e7e0-c04f-4842-ca569ebbe023.htm">Quine.Schemas.Graph Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="(c) 2024-2025 Stian Z. Vrba" target="_blank" rel="noopener noreferrer">(c) 2024-2025 Stian Z. Vrba</a></p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>