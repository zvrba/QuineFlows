<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>UnbufferedFile.FinalizeAsync Method</title><meta name="Title" content="FinalizeAsync" /><meta name="Help.Id" content="M:Quine.FileTransfer.UnbufferedFile.FinalizeAsync(Quine.FileTransfer.ITransferHasher,Quine.FileTransfer.ITransferBuffer)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Quine.FileTransfer" /><meta name="guid" content="a13c6b5a-b9b3-8e46-9b18-61cb1156cb12" /><meta name="Description" content="Finalizes the worker by computing the verification hash and disposing of any previously acquired resources. Failure must be signaled by throwing an exception. This method is always invoked, once per transfer." /><meta name="tocFile" content="../toc/IDCKD.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Quine libraries user's guide</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Unbuffered<wbr />File<span id="LSTF7987D74_0" data-languageSpecificText="cpp=::|nu=."></span>Finalize<wbr />Async Method</h1><div class="summary"><p>
            Finalizes the worker by computing the verification hash and disposing of any previously acquired resources.
            Failure must be signaled by throwing an exception.
            This method is always invoked, once per transfer.  It is invoked regardless of whether the worker encountered
            an error or not (<a href="ea5ccab1-5713-9437-1d97-ddc640eac842.htm">Exception</a>).
            </p><p>
            IMPORTANT: Resources should be disposed even if cancellation is requested.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="1c194bcc-215a-f4c1-ae1b-08712b2e439d.htm">Quine.FileTransfer</a><br /><strong>Assembly:</strong> Quine.FileTransfer (in Quine.FileTransfer.dll) Version: 1.0.0+2d4678028124cbb40154ed2e4b22472910ab3869<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="identifier">Task</span>&lt;<span class="identifier">byte</span>[]?&gt; <span class="identifier">FinalizeAsync</span>(
	<span class="identifier">ITransferHasher</span>? <span class="parameter">transferHasher</span>,
	<span class="identifier">ITransferBuffer</span> <span class="parameter">buffer</span>
)</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">transferHasher</span>  <a href="6880c21b-d649-ae87-5e1f-a3c64c939129.htm">ITransferHasher</a></dt><dd>
            A ready hasher instance to use for hash computation.  If <span class="code">null</span>, hash verification must be skipped.
            This parameter is guaranteed to be <span class="code">null</span> if the worker encountered errors previously.
            </dd><dt class="has-text-weight-normal"><span class="parameter">buffer</span>  <a href="9ec6bf64-9be3-721b-dd78-0720ec012b95.htm">ITransferBuffer</a></dt><dd>Buffer to use for reading in file data for hashing.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_top" rel="noopener noreferrer">Task</a><span id="LSTF7987D74_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span id="LSTF7987D74_2" data-languageSpecificText="cpp=array&lt;"></span><a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_top" rel="noopener noreferrer">Byte</a><span id="LSTF7987D74_3" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span><span id="LSTF7987D74_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />Verification hash, or <span class="code">null</span> if verification was not requested.<h4 class="quickLinkHeader">Implements</h4><a href="68f0675f-001f-89d9-bd0d-e27c3214416b.htm">ITransferWorker<span id="LSTF7987D74_5" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>FinalizeAsync(ITransferHasher, ITransferBuffer)</a><br /></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="0a2c74b3-4574-9e50-4ba1-634496290db9.htm">UnbufferedFile Class</a></div><div><a href="1c194bcc-215a-f4c1-ae1b-08712b2e439d.htm">Quine.FileTransfer Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li><li><a class="quickLink">Implements</a></li></ul></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="(c) 2024-2025 Stian Z. Vrba" target="_blank" rel="noopener noreferrer">(c) 2024-2025 Stian Z. Vrba</a></p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>