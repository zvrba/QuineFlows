<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>TransformNode&lt;TState, TInput, TOutput0&gt; Class</title><meta name="Title" content="TransformNode&lt;TState, TInput, TOutput0&gt;" /><meta name="Help.Id" content="T:Quine.Graph.TransformNode`3" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Quine.Graph" /><meta name="guid" content="d06e85b0-0914-d6f6-7b77-d7baf08ce287" /><meta name="Description" content="Transform node with one output. Arbitrary number of messages can be produced for a single input message." /><meta name="tocFile" content="../toc/IDF.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Quine libraries user's guide</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Transform<wbr />Node<span id="LST9D8F35D3_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TState</span>, <span class="typeparameter">TInput</span>, <span class="typeparameter">TOutput0</span><span id="LST9D8F35D3_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span> Class</h1><div class="summary">
            Transform node with one output.  Arbitrary number of messages can be produced for a single input message.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="adaac905-5a5c-253d-9a23-20c5f79a4866.htm">Quine.Graph</a><br /><strong>Assembly:</strong> Quine.Graph (in Quine.Graph.dll) Version: 1.0.0+0ea0706914ee4edf2b0ed66bec3ab4d062a43b68<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">TransformNode</span>&lt;TState, TInput, TOutput0&gt; : <span class="identifier">TransformNode</span>&lt;TState, TInput&gt;
<span class="keyword">where</span> TState : <span class="identifier">TransformNodeState</span>&lt;TInput, TOutput0&gt;
<span class="keyword">where</span> TInput : <span class="identifier">GraphMessage</span>
<span class="keyword">where</span> TOutput0 : <span class="identifier">GraphMessage</span>
</code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_top" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="e75aef7f-df43-8a7d-ad51-3c0f4bb0b705.htm">GraphSchemaHook</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="7c57996a-224a-c5c9-0a23-09f9fc92afae.htm">GraphSchemaHook</a><span id="LST9D8F35D3_2" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="83ffc83d-d8cc-93cf-8ea7-74b72c9c4dc1.htm">NodeStateBase</a><span id="LST9D8F35D3_3" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="5e09cdce-341c-c36f-dbdb-3096a0113f90.htm">NodeShell</a><span id="LST9D8F35D3_4" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TState</span></span><span id="LST9D8F35D3_5" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="143a9cf1-b78d-a621-ad93-a7df34643757.htm">TransformNode</a><span id="LST9D8F35D3_6" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TState</span></span>, <span class="selflink"><span class="typeparameter">TInput</span></span><span id="LST9D8F35D3_7" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">TransformNode<span id="LST9D8F35D3_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TState, TInput, TOutput0<span id="LST9D8F35D3_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span></dd></dl><dl class="inheritanceHierarchy"><dt>Derived</dt><dd><div><a href="ee680852-dec8-0091-5e37-c2af53c1ceb4.htm">Quine.Graph<span id="LST9D8F35D3_10" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TransformNode<span id="LST9D8F35D3_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TState, TInput, TOutput0, TOutput1<span id="LST9D8F35D3_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></div></dd></dl><h4>Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">TState</span></dt><dd /><dt class="has-text-weight-normal"><span class="parameter">TInput</span></dt><dd /><dt class="has-text-weight-normal"><span class="parameter">TOutput0</span></dt><dd /></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDOFASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="05d3c361-24d4-7013-7ad0-bedc57c87079.htm">TransformNode<span id="LST9D8F35D3_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TState, TInput, TOutput0<span id="LST9D8F35D3_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>Initializes a new instance of the <span class="selflink">TransformNode<span id="LST9D8F35D3_15" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TState, TInput, TOutput0<span id="LST9D8F35D3_16" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> class</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDPFASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="20d12ce9-54f2-c3fd-a159-fbe915369804.htm">CancellationToken</a></td><td>
            Used to signal that the graph is being canceled; shared by all nodes.
            <br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr><tr><td><a href="058cbf79-fdb8-9a9f-02ac-0ace4d225537.htm">ConcurrencyLimit</a></td><td>
            Determines how many instances of this node type can run concurrently.
            Use <span class="code">int.MaxValue</span> for unbounded number of instances.
            <br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr><tr><td><a href="a037eb6b-9972-9fda-2bbd-8d41b5ac0c1b.htm">Id</a></td><td><br />(Inherited from <a href="e75aef7f-df43-8a7d-ad51-3c0f4bb0b705.htm">GraphSchemaHook</a>)</td></tr><tr><td><a href="c81e6b71-71f8-57cb-336c-0c5a2056877e.htm">ItemProcessingEventData</a></td><td>
            Information about the item currently being processed.
            <br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr><tr><td><a href="783f871e-feb5-bffc-6a09-a938b225b02d.htm">Owner</a></td><td>
            Parent/owner of this node, or null.
            <br />(Inherited from <a href="e75aef7f-df43-8a7d-ad51-3c0f4bb0b705.htm">GraphSchemaHook</a>)</td></tr><tr><td><a href="350e050a-4672-5306-e019-3cf7121d9fab.htm">PathId</a></td><td>
            Provides IDs of all job nodes from the root (1st element) to <span class="code">this</span>.
            The byte array is a sequence of integer ids with variable-length encoding (7-bit).
            <br />(Inherited from <a href="e75aef7f-df43-8a7d-ad51-3c0f4bb0b705.htm">GraphSchemaHook</a>)</td></tr><tr><td><a href="66181015-6cae-cfd1-4d5b-fc2f522882ba.htm">State</a></td><td><br />(Inherited from <a href="5e09cdce-341c-c36f-dbdb-3096a0113f90.htm">NodeShell<span id="LST9D8F35D3_17" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST9D8F35D3_18" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDEFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="19dd10ec-2527-5b33-aff8-5500b04346fc.htm">CreateItemProcessingEventData</a></td><td>
            Overriding this method allows to create derived instances of <a href="c81e6b71-71f8-57cb-336c-0c5a2056877e.htm">ItemProcessingEventData</a>
            for reporting of extended progress events.
            <br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr><tr><td><a href="fe643aed-64f9-0c41-1fe3-ef441420ae15.htm">LifecycleAsync</a></td><td>
            This method defines the complete node lifecycle. Overriding this method allows the node to perform actions before
            <a href="dac5dd0c-613a-1d86-1b1e-2f6db40bcb20.htm">MessageLoopAsync<span id="LST9D8F35D3_19" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> has been started and after it has exited.  Notes to implementers: The derived
            implementation MUST call the base implementation.  Most of the protected methods cannot be called before or
            after this method has executed.
            <br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr><tr><td><a href="a8a9ef5c-7d69-79dc-c208-63fff48b8acf.htm">MessageLoopAsync</a></td><td>
            Repeatedly dequeues a message from <a href="bb63d548-7597-51a6-0ff7-871e8d0d968b.htm">Input0</a> and invokes <a href="5fe82068-08be-4d3c-3420-c912548aca02.htm">ProcessSingleMessageAsync(TInput)</a> on it. 
            <br />(Inherited from <a href="143a9cf1-b78d-a621-ad93-a7df34643757.htm">TransformNode<span id="LST9D8F35D3_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TState, TInput<span id="LST9D8F35D3_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><a href="2c543ca2-a14f-051c-8644-5f25dcfb66ce.htm">ProcessAsync</a></td><td>
            Must be overridden in derived classes to process the message.
            Processing errors are signaled by exceptions.
            <br />(Inherited from <a href="143a9cf1-b78d-a621-ad93-a7df34643757.htm">TransformNode<span id="LST9D8F35D3_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TState, TInput<span id="LST9D8F35D3_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><a href="5fe82068-08be-4d3c-3420-c912548aca02.htm">ProcessSingleMessageAsync</a></td><td>
            Wraps <a href="2c543ca2-a14f-051c-8644-5f25dcfb66ce.htm">ProcessAsync(TInput)</a> with raising begin/end events and exception handling.
            <br />(Inherited from <a href="143a9cf1-b78d-a621-ad93-a7df34643757.htm">TransformNode<span id="LST9D8F35D3_24" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TState, TInput<span id="LST9D8F35D3_25" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><a href="905d26fd-40b1-f47c-11d9-12b8c9e7f0ed.htm">QueryAsync</a></td><td>
            Sends interactive query to the controlling front-end.
            <br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr><tr><td><a href="30e1453e-eda3-c4ff-cc6a-b1ebdd2acf6b.htm">RaiseProcessingBeginEvent</a></td><td>
            Sets current message to <span class="parameter">m</span> and singals start of processing.
            If overridden, the base implementation MUST be called.
            <br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr><tr><td><a href="752619a7-2873-a83a-6e21-8e1105774792.htm">RaiseProcessingEndEvent</a></td><td>
            Signals end of processing for the message set by <a href="30e1453e-eda3-c4ff-cc6a-b1ebdd2acf6b.htm">RaiseProcessingBeginEvent(GraphMessage)</a>
            and sets the current message to <span class="code">null</span>.
            If overridden, the base implementation MUST be called.
            <br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr><tr><td><a href="2060c081-b032-1d1d-0e75-a0eb4b921efc.htm">RaiseProgressEvent</a></td><td>
            Raises progress event for the message set by <a href="30e1453e-eda3-c4ff-cc6a-b1ebdd2acf6b.htm">RaiseProcessingBeginEvent(GraphMessage)</a>.
            At most one of the arguments can be set to a non-negative value.
            If overridden, the base implementation MUST be called.
            <br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr><tr><td><a href="2648d855-ef1f-bb6b-ed1b-40559cd66626.htm">RaiseTraceEvent</a></td><td>
            Raises a trace event.  The event is always published to the shell, and then appended to either the item's
            trace (if <a href="c81e6b71-71f8-57cb-336c-0c5a2056877e.htm">ItemProcessingEventData</a> is not null) or to the node's trace if the lifecycle allows it.
            <br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAFASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="087270e3-fcd3-ab80-924a-22c8e6151b53.htm">_LifetimeScope</a></td><td><br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr><tr><td><a href="3a93cbb0-33d2-d3bd-1f60-ec2652e82a41.htm">_TraceSource</a></td><td><br />(Inherited from <a href="72b778e0-dda8-dc91-01be-1675c67bbb97.htm">NodeShell</a>)</td></tr><tr><td><a href="bb63d548-7597-51a6-0ff7-871e8d0d968b.htm">Input0</a></td><td><br />(Inherited from <a href="143a9cf1-b78d-a621-ad93-a7df34643757.htm">TransformNode<span id="LST9D8F35D3_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TState, TInput<span id="LST9D8F35D3_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><a href="a394de17-53f4-d896-ee01-f0b617d28a97.htm">Output0</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="adaac905-5a5c-253d-9a23-20c5f79a4866.htm">Quine.Graph Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="(c) 2024-2025 Stian Z. Vrba" target="_blank" rel="noopener noreferrer">(c) 2024-2025 Stian Z. Vrba</a></p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>