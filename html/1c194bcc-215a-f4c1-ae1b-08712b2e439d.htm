<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Quine.FileTransfer Namespace</title><meta name="Title" content="Quine.FileTransfer" /><meta name="Help.Id" content="N:Quine.FileTransfer" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Quine.FileTransfer" /><meta name="guid" content="1c194bcc-215a-f4c1-ae1b-08712b2e439d" /><meta name="Description" content="Contains types for transferring files in a single-producer, multiple-consumers manner. Provides concrete implementations for copying OS files." /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Quine libraries user's guide</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Quine.<wbr />File<wbr />Transfer Namespace</h1><div class="summary">Contains types for transferring files in a single-producer, multiple-consumers manner.  Provides concrete implementations for copying OS files.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Classes</h2><div id="IDACASection"><table id="classList" class="table is-hoverable"><tr><td><a href="0f27aaf2-8030-4144-830e-b21097a16dc5.htm">CryptographicTransferHash</a></td><td>
            Implements <a href="6880c21b-d649-ae87-5e1f-a3c64c939129.htm">ITransferHasher</a> by a user-specified cryptographic hash.
            </td></tr><tr><td><a href="94b2670c-e859-8ec3-69a3-7d48a0dacd23.htm">HashVerificationException</a></td><td>
            Thrown when hash verification fails.
            </td></tr><tr><td><a href="0126e38a-fc2d-9693-2587-be2d601db2d6.htm">TransferDriver</a></td><td>
            This class is the main entry point for starting transfers.  The same instance should be reused for many executions,
            though not concurrently.  This class allocates native memory (the amount depends on the parameters passed to ctor)
            which is held until disposal.
            </td></tr><tr><td><a href="0b3498e6-0191-9bdf-c1ad-1f4c84c6fef7.htm">TransferStateMachine</a></td><td>
            Data shared between <a href="aae8f6d1-692c-7543-73f6-eb4725c2b9b3.htm">ITransferWorker</a> and <a href="0126e38a-fc2d-9693-2587-be2d601db2d6.htm">TransferDriver</a> that is used to manage execution.
            This class cannot be derived from outside of this assembly, but its public properties can be used to inspect
            the worker's status after execution.
            </td></tr><tr><td><a href="0a2c74b3-4574-9e50-4ba1-634496290db9.htm">UnbufferedFile</a></td><td>
            Common implementation for file reader and writer.  Uses unbuffered ("direct") file I/O.
            </td></tr><tr><td><a href="028a3cf9-fd7e-97ca-feab-3dfd3bc2db3f.htm">UnbufferedFile<span id="LSTA544C35C_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Reader</a></td><td>
            File reader (producer) in a transfer operation.
            </td></tr><tr><td><a href="920f89ff-e68a-6764-3e29-6bdb4184bd7e.htm">UnbufferedFile<span id="LSTA544C35C_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Writer</a></td><td>
            File writer (consumer) in a transfer operation.
            </td></tr><tr><td><a href="d5924f0f-6e9c-2d86-b238-ac1b621d6104.htm">XX64TransferHash</a></td><td>
            Implements XXHash64 algorithm.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Interfaces</h2><div id="IDDCASection"><table id="interfaceList" class="table is-hoverable"><tr><td><a href="8e65a40a-c3cc-de43-928e-5d9c9fcdcc36.htm">IFileStreamOpenStrategy</a></td><td>
            Provides methods for creating unbuffered file streams from paths directly accessible to OS.
            </td></tr><tr><td><a href="9ec6bf64-9be3-721b-dd78-0720ec012b95.htm">ITransferBuffer</a></td><td>
            Data buffer shared between producer and consumers.
            </td></tr><tr><td><a href="f707bb22-3c9c-ae7e-d1de-8fbeeab7e96d.htm">ITransferConsumer</a></td><td>
            This interface must be implemented by the consumer-side of a transfer.
            </td></tr><tr><td><a href="6880c21b-d649-ae87-5e1f-a3c64c939129.htm">ITransferHasher</a></td><td>
            This interface must be implemented by hash algorithms.  The interface provides s default implementation
            for <a href="https://learn.microsoft.com/dotnet/api/system.icloneable.clone" target="_top" rel="noopener noreferrer">Clone<span id="LSTA544C35C_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>, which just invokes <a href="580b24c2-a86e-3bb8-38a4-16d493470a31.htm">Clone<span id="LSTA544C35C_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>.
            </td></tr><tr><td><a href="898a4f40-12c7-e5b1-57e4-bb329c3e9659.htm">ITransferProducer</a></td><td>
            This interface must be implemented by the producer-side of a transfer.
            </td></tr><tr><td><a href="aae8f6d1-692c-7543-73f6-eb4725c2b9b3.htm">ITransferWorker</a></td><td>
            Common properties and methods shared between <a href="898a4f40-12c7-e5b1-57e4-bb329c3e9659.htm">ITransferProducer</a> and <a href="f707bb22-3c9c-ae7e-d1de-8fbeeab7e96d.htm">ITransferConsumer</a>.
            The implementation of async methods MUST check <a href="7da8b9f9-e73f-df3e-2276-91e349881307.htm">CancellationToken</a> for cancellation.
            </td></tr></table></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Classes</a></li><li><a class="quickLink">Interfaces</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="(c) 2024-2025 Stian Z. Vrba" target="_blank" rel="noopener noreferrer">(c) 2024-2025 Stian Z. Vrba</a></p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>